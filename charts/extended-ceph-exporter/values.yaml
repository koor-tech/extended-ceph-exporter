# Default values for extended-ceph-exporter.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: docker.io/koorinc/extended-ceph-exporter
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

sidecars: []

service:
  type: ClusterIP
  port: 9138

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

serviceMonitor:
  # -- Specifies whether a prometheus-operator ServiceMonitor should be created
  enabled: false
  # -- Additional Labels for the ServiceMonitor object
  additionalLabels: {}
  #namespace: "monitoring"
  namespaceSelector:
  # Default: scrape .Release.Namespace only
  # To scrape all, use the following:
  #  matchNames:
  #    - monitoring
  #   any: true
  scrapeInterval: 30s
  # honorLabels: true

prometheusRule:
  # -- Specifies whether a prometheus-operator PrometheusRule should be created
  enabled: false
  # -- Additional Labels for the PrometheusRule object
  additionalLabels: {}
  # Default: .Release.Namespace
  # namespace: ""
  # prometheusRule.rules -- Checkout the file for example alerts
  rules: []

# -- Config for the exporter
# pass during helm install or set prior to update this can also be done during runtime by using `--set``
# the host defaults to the first CephObjectStore resource found in all namespaces. 
# The access and secret keys are randomly generated by default
config:
  rgw:
    # The Ceph RGW endpoint as a URL, e.g. "https://your-ceph-rgw-endpoint-here:8443"
    host: ""
    # RGW admin access key
    accessKey: ""
    # RGW admin secret key
    secretKey: ""

# -- Will be put in a Secret and used as env vars
additionalEnv: {}

# If enabled,  will create a rgw admin user `extended-ceph-exporter` either on
# Rook/Ceph cluster pre upgrade(when having extended-ceph-exporter as a helm
# dependency) or on post install of extended-ceph-exporter(needs existing
# Rook/Ceph cluster).
# See more: https://github.com/koor-tech/extended-ceph-exporter/tree/main/charts/extended-ceph-exporter#installing-the-chart 
# This user will be used for extended ceph metrics.
postInstallJob:
  enabled: true
  image:
    repository: quay.io/ceph/ceph
    pullPolicy: IfNotPresent
    tag: v17.2.3
